document.addEventListener("DOMContentLoaded", function () {
    const paymentButton = document.getElementById('payment-button');
    const customerModal = document.getElementById('customer-modal');
    const closeCustomerModalButton = document.getElementById('close-customer-modal');
    const invoiceModal = document.getElementById('invoiceModal');
    const closeInvoiceModalButton = document.getElementById('close-invoice-modal');
    const confirmCheckoutButton = document.getElementById('confirm-checkout');
    let cartItems = [];


    const userID = localStorage.getItem('userID');
    if (!userID) {
        alert("Kh√¥ng t√¨m th·∫•y userID. Vui l√≤ng ƒëƒÉng nh·∫≠p.");
        return;
    }


    if (paymentButton) {
        paymentButton.onclick = () => {
            customerModal.style.display = 'block';
        };
    }

    if (closeCustomerModalButton) {
        closeCustomerModalButton.onclick = () => {
            customerModal.style.display = 'none';
        };
    }

    window.onclick = function (event) {
        if (event.target === customerModal) {
            customerModal.style.display = 'none';
        }
        if (event.target === invoiceModal) {
            invoiceModal.style.display = 'none';
        }
    };

    // X·ª≠ l√Ω form kh√°ch h√†ng
    const form = document.getElementById('customerForm');
    if (form) {
        form.onsubmit = async (event) => {
            event.preventDefault();

            const customerData = {
                name: document.getElementById('customerName').value,
                phoneNumber: document.getElementById('customerPhone').value
            };

            try {
                const response = await fetch('http://localhost:8081/restaurant/customer', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(customerData)
                });

                if (response.ok) {

                    Object.keys(customerData).forEach(key => {
                        localStorage.setItem(key, customerData[key]);
                    });


                    customerModal.style.display = 'none';


                    displayInvoiceModal();
                } else {
                    const errorData = await response.json();
                    console.error('Error Response:', errorData);
                    alert(`C√≥ l·ªói x·∫£y ra: ${errorData.message || 'Vui l√≤ng th·ª≠ l·∫°i.'}`);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('C√≥ l·ªói x·∫£y ra khi g·ª≠i th√¥ng tin kh√°ch h√†ng.');
            }
        };
    }


    async function displayInvoiceModal() {
        if (!invoiceModal) {
            console.error('Modal h√≥a ƒë∆°n kh√¥ng t·ªìn t·∫°i!');
            return;
        }

        invoiceModal.style.display = 'block';


        const Name = localStorage.getItem('name') || 'Ch∆∞a c√≥ th√¥ng tin';
        const tableID = localStorage.getItem('tableID') || 'Ch∆∞a c√≥ b√†n';
        document.getElementById('server-name').textContent = Name;
        document.getElementById('table-number').textContent = tableID;


        const tableId = localStorage.getItem('tableID');
        if (!tableId) {
            alert('Kh√¥ng c√≥ th√¥ng tin b√†n');
            return;
        }

        try {
            const response = await fetch(`http://127.0.0.1:8081/restaurant/order/table/${tableId}`);
            if (response.ok) {
                const order = await response.json();
                cartItems = order.foods.map((food, index) => ({
                    name: food.name,
                    price: food.price,
                    quantity: order.quantity[index],
                    image: food.description
                }));

                // C·∫≠p nh·∫≠t th√¥ng tin m√≥n ƒÉn v√†o modal
                updateInvoiceItems();
            } else {
                console.error('Error fetching order:', response.statusText);
                alert('Kh√¥ng th·ªÉ t·∫£i th√¥ng tin ƒë∆°n h√†ng.');
            }
        } catch (error) {
            console.error('Error fetching order:', error);
            alert('C√≥ l·ªói x·∫£y ra khi t·∫£i th√¥ng tin ƒë∆°n h√†ng.');
        }
    }

    // C·∫≠p nh·∫≠t danh s√°ch m√≥n ƒÉn trong h√≥a ƒë∆°n
    function updateInvoiceItems() {
        const invoiceItemsTable = document.getElementById('invoice-items').getElementsByTagName('tbody')[0];
        invoiceItemsTable.innerHTML = ''; // X√≥a c√°c d√≤ng c≈©

        let totalPrice = 0;
        if (cartItems.length === 0) {
            invoiceItemsTable.innerHTML = '<tr><td colspan="5">Kh√¥ng c√≥ m√≥n ƒÉn trong h√≥a ƒë∆°n.</td></tr>';
        } else {
            cartItems.forEach(item => {
                const row = document.createElement('tr');
                row.innerHTML = `
                        <td><img src="${item.image}" alt="${item.name}" style="width: 50px; height: 50px;"></td>
                        <td>${item.name}</td>
                        <td>${item.quantity}</td>
                        <td>${item.price} VNƒê</td>
                        <td>${item.quantity * item.price} VNƒê</td>
                    `;
                invoiceItemsTable.appendChild(row);
                totalPrice += item.quantity * item.price;
            });
        }

        document.getElementById('total-price-modal').textContent = `${totalPrice} VNƒê`;
    }



    if (confirmCheckoutButton) {
        confirmCheckoutButton.onclick = async () => {
            const tableID = localStorage.getItem('tableID');
            const userID = localStorage.getItem('userID');
            const phoneNumber = localStorage.getItem('phoneNumber');
            const rating = document.getElementById('customerRating').value;
            const comment = document.getElementById('customerComment').value;

            if (!rating || !comment) {
                alert("Vui l√≤ng nh·∫≠p ƒë√°nh gi√° v√† nh·∫≠n x√©t.");
                return;
            }

            const requestBody = { userID, phoneNumber, rating: parseInt(rating), comment };

            try {
                console.log("üîÑ G·ª≠i y√™u c·∫ßu thanh to√°n...");
                const paymentResponse = await fetch(
                    `http://localhost:8081/restaurant/checkout/${tableID}`,
                    {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(requestBody),
                    }
                );

                if (!paymentResponse.ok) {
                    const errText = await paymentResponse.text();
                    console.error("‚ùå Thanh to√°n th·∫•t b·∫°i:", errText);
                    alert("Thanh to√°n th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.");
                    return;
                }
                fetch(`http://localhost:8081/restaurant/tables/unavailable/${tableID}`, {
                    method: 'POST',
                })
                    .then(response => {
                        if (response.ok) {
                            console.log(`B√†n ${tableID} ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t tr·∫°ng th√°i UNAVAILABLE.`);
                        } else {
                            return response.text().then(text => {
                                console.error('L·ªói khi ƒë·∫∑t tr·∫°ng th√°i b√†n:', text);
                            });
                        }
                    })
                    .catch(err => console.error('L·ªói khi g·ªçi API:', err));

                const invoiceData = await paymentResponse.json();
                console.log("‚úÖ Thanh to√°n th√†nh c√¥ng:", invoiceData);

                // G·ªçi API ƒë·ªÉ set b√†n AVAILABLE
                console.log("üîÑ G·ª≠i y√™u c·∫ßu set b√†n AVAILABLE...");
                releaseTable(tableID);

                console.log("üßπ X√≥a cartItems v√† reload...");
                localStorage.removeItem("cartItems");
                window.location.reload();
            } catch (err) {
                console.error("‚ùå L·ªói to√†n c·ª•c:", err);
                alert("ƒê√£ c√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i.");
            }
        };
    }
    if (closeInvoiceModalButton) {
        closeInvoiceModalButton.onclick = () => {
            invoiceModal.style.display = 'none';
        };
    }
});
